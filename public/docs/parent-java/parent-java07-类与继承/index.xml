<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java07 类与继承 on 笔记</title>
    <link>http://localhost:1313/docs/parent-java/parent-java07-%E7%B1%BB%E4%B8%8E%E7%BB%A7%E6%89%BF/</link>
    <description>Recent content in java07 类与继承 on 笔记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/docs/parent-java/parent-java07-%E7%B1%BB%E4%B8%8E%E7%BB%A7%E6%89%BF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>java07类与继承</title>
      <link>http://localhost:1313/docs/parent-java/parent-java07-%E7%B1%BB%E4%B8%8E%E7%BB%A7%E6%89%BF/java07%E7%B1%BB%E4%B8%8E%E7%BB%A7%E6%89%BF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/parent-java/parent-java07-%E7%B1%BB%E4%B8%8E%E7%BB%A7%E6%89%BF/java07%E7%B1%BB%E4%B8%8E%E7%BB%A7%E6%89%BF/</guid>
      <description>&lt;h1 id=&#34;继承&#34;&gt;继承 &lt;a href=&#34;#%e7%bb%a7%e6%89%bf&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;继承得到的类是&lt;strong&gt;子类&lt;/strong&gt;，被继承的类是&lt;strong&gt;父类（超类）&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;6880dae&#34; class=&#34;language-java &#34;&gt;&#xA;  &lt;code&gt;class 子类名 extends 父类名{&#xD;&#xA;&#xD;&#xA;}&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;根节点是Object类（java.long中），&lt;code&gt; class A与class A extends Object一样&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;同一包中，继承除了private之外的&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;不同包中，继承protected、public的&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;子类初始化时，父类所有的都分配内存，默认使用父类的无参数的构造方法，若无则用super&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;  super(name, age);&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;成员变量的隐藏&#34;&gt;成员变量的隐藏 &lt;a href=&#34;#%e6%88%90%e5%91%98%e5%8f%98%e9%87%8f%e7%9a%84%e9%9a%90%e8%97%8f&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;若子类的成员变量与父类同名，则父类的成员变量就会被&lt;strong&gt;隐藏&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;访问隐藏的&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;9e22bea&#34; class=&#34;language-java &#34;&gt;&#xA;  &lt;code&gt;//子类&#xD;&#xA;class Child extends Parent {&#xD;&#xA;    int variable = 20;&#xD;&#xA;&#xD;&#xA;    public void printBothVariables() {&#xD;&#xA;        // 访问父类的变量&#xD;&#xA;        System.out.println(&amp;#34;父类变量的值: &amp;#34; &amp;#43; super.variable);&#xD;&#xA;        // 访问子类的变量&#xD;&#xA;        System.out.println(&amp;#34;子类变量的值: &amp;#34; &amp;#43; variable);&#xD;&#xA;    }&#xD;&#xA;}&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h1 id=&#34;重写&#34;&gt;重写 &lt;a href=&#34;#%e9%87%8d%e5%86%99&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;重写不能降低方法的访问权限，但能提高访问权限&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;子类中重写方法需要和父类被重写的方法具有相同的方法名、参数列表以及返回值类型。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;instanceof&#34;&gt;instanceof &lt;a href=&#34;#instanceof&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;左侧是对象，右侧是类，如果左侧是右侧的，则是true&lt;/p&gt;&#xA;&lt;h1 id=&#34;final&#34;&gt;final &lt;a href=&#34;#final&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;44171cb&#34; class=&#34;language-java &#34;&gt;&#xA;  &lt;code&gt;final class A{&#xD;&#xA;    &#xD;&#xA;}&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;final修饰类，类不能被继承&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
