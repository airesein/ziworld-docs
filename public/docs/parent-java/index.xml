<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on 笔记</title>
    <link>http://localhost:1313/docs/parent-java/</link>
    <description>Recent content in java on 笔记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/docs/parent-java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>java06实例</title>
      <link>http://localhost:1313/docs/parent-java/java06/java06%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/parent-java/java06/java06%E5%AE%9E%E4%BE%8B/</guid>
      <description>&lt;h1 id=&#34;实例变量与类变量&#34;&gt;实例变量与类变量 &lt;a href=&#34;#%e5%ae%9e%e4%be%8b%e5%8f%98%e9%87%8f%e4%b8%8e%e7%b1%bb%e5%8f%98%e9%87%8f&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;h4 id=&#34;类变量定义&#34;&gt;类变量定义 &lt;a href=&#34;#%e7%b1%bb%e5%8f%98%e9%87%8f%e5%ae%9a%e4%b9%89&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;类成员（也被叫做静态成员）是使用 &lt;code&gt;static&lt;/code&gt; 关键字修饰的成员，&lt;strong&gt;它属于类本身&lt;/strong&gt;，而不是类的某个具体实例。这意味着无论创建了多少个类的实例，类成员都只有一份副本，被所有&lt;strong&gt;实例共享&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;所属对象&lt;/strong&gt;：类成员属于类，实例成员属于类的实例。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;访问方式&lt;/strong&gt;：类成员可通过类名直接访问，实例成员需通过类的实例来访问。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;内存分配&lt;/strong&gt;：类成员在类加载时分配内存，实例成员在创建实例时分配内存。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;副本数量&lt;/strong&gt;：类成员只有一份副本，被所有实例共享；实例成员每个实例都有自己独立的副本。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;实例方法和类方法&#34;&gt;实例方法和类方法 &lt;a href=&#34;#%e5%ae%9e%e4%be%8b%e6%96%b9%e6%b3%95%e5%92%8c%e7%b1%bb%e6%96%b9%e6%b3%95&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;实例方法不仅可以使用成员变量，类变量，类方法，实例方法&lt;/p&gt;&#xA;&lt;p&gt;类方法只能操作类变量，类方法&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;this不能出现在类方法中&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;64289c8&#34; class=&#34;language-java &#34;&gt;&#xA;  &lt;code&gt;public static int add(int a, int b) {&#xD;&#xA;&#x9;return a &amp;#43; b;&#xD;&#xA;}&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h1 id=&#34;方法重载与多态&#34;&gt;方法重载与多态 &lt;a href=&#34;#%e6%96%b9%e6%b3%95%e9%87%8d%e8%bd%bd%e4%b8%8e%e5%a4%9a%e6%80%81&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;重载：参数不同，不在乎返回值&lt;/p&gt;&#xA;&lt;h1 id=&#34;包&#34;&gt;包 &lt;a href=&#34;#%e5%8c%85&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;如果程序使用了&lt;code&gt;package tom.jiafei&lt;/code&gt;，在第一句&lt;/p&gt;&#xA;&lt;p&gt;那么包存的类在&lt;strong&gt;tom/jiafei&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;运行java tom.jiafei.主类名&lt;/p&gt;&#xA;&lt;h1 id=&#34;import&#34;&gt;import &lt;a href=&#34;#import&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;import java.until.Date 引入java.until中的Date类&lt;/p&gt;&#xA;&lt;p&gt;import java.until.* 引入java.until包中的所有类&lt;/p&gt;&#xA;&lt;h1 id=&#34;访问权限&#34;&gt;访问权限 &lt;a href=&#34;#%e8%ae%bf%e9%97%ae%e6%9d%83%e9%99%90&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;访问权限&lt;/th&gt;&#xA;          &lt;th&gt;本类&lt;/th&gt;&#xA;          &lt;th&gt;本包的类&lt;/th&gt;&#xA;          &lt;th&gt;子类&lt;/th&gt;&#xA;          &lt;th&gt;非子类的外包类&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;public&lt;/td&gt;&#xA;          &lt;td&gt;是&lt;/td&gt;&#xA;          &lt;td&gt;是&lt;/td&gt;&#xA;          &lt;td&gt;是&lt;/td&gt;&#xA;          &lt;td&gt;是&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;protected&lt;/td&gt;&#xA;          &lt;td&gt;是&lt;/td&gt;&#xA;          &lt;td&gt;是&lt;/td&gt;&#xA;          &lt;td&gt;是&lt;/td&gt;&#xA;          &lt;td&gt;否&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;default&lt;/td&gt;&#xA;          &lt;td&gt;是&lt;/td&gt;&#xA;          &lt;td&gt;是&lt;/td&gt;&#xA;          &lt;td&gt;否&lt;/td&gt;&#xA;          &lt;td&gt;否&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;private&lt;/td&gt;&#xA;          &lt;td&gt;是&lt;/td&gt;&#xA;          &lt;td&gt;否&lt;/td&gt;&#xA;          &lt;td&gt;否&lt;/td&gt;&#xA;          &lt;td&gt;否&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>java08接口</title>
      <link>http://localhost:1313/docs/parent-java/java08%E6%8E%A5%E5%8F%A3/java08%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/parent-java/java08%E6%8E%A5%E5%8F%A3/java08%E6%8E%A5%E5%8F%A3/</guid>
      <description>&lt;p&gt;为什么有接口？&lt;/p&gt;&#xA;&lt;p&gt;java&lt;strong&gt;不支持多重继承&lt;/strong&gt;（子类只能有一个父类）&lt;/p&gt;&#xA;&lt;h1 id=&#34;interface&#34;&gt;interface &lt;a href=&#34;#interface&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;interface接口，分为&lt;strong&gt;接口声明，接口体&lt;/strong&gt;，其中修饰符（public&amp;hellip;）,抽象方法，静态变量&lt;/p&gt;&#xA;&lt;p&gt;default定义实例方法，访问权限必须为public，可以&lt;/p&gt;&#xA;&lt;p&gt;接口中没有构造函数&lt;/p&gt;&#xA;&lt;p&gt;implenments实现接口,有常量和default方法&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;9bbf95d&#34; class=&#34;language-java &#34;&gt;&#xA;  &lt;code&gt;calss Dog extends Animal impelments A,B&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;h1 id=&#34;接口回掉&#34;&gt;接口回掉 &lt;a href=&#34;#%e6%8e%a5%e5%8f%a3%e5%9b%9e%e6%8e%89&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;h1 id=&#34;函数接口&#34;&gt;函数接口 &lt;a href=&#34;#%e5%87%bd%e6%95%b0%e6%8e%a5%e5%8f%a3&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;lanbda表达式&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;54add42&#34; class=&#34;language-java &#34;&gt;&#xA;  &lt;code&gt;(a,b)-&amp;gt;{&#xD;&#xA;    return a,b&#xD;&#xA;}&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;接口回调lanbada表达式实现的接口方法&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
